---
http_interactions:
- request:
    method: get
    uri: https://api.labs.cognitive.microsoft.com/academic/v1.0/evaluate?attributes=Ti,AA.AuN,Y,D,RId,E&count=1&expr=W%20==%20%27internet%27&model=latest&offset=0
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Ocp-Apim-Subscription-Key:
      - "<MS_TOKEN>"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Length:
      - '10858'
      Content-Type:
      - application/json
      Access-Control-Allow-Origin:
      - "*"
      Request-Context:
      - appId=cid-v1:7cd06f0e-6d73-46a5-9c10-4ebe681d0156
      X-Powered-By:
      - ASP.NET
      Date:
      - Thu, 25 Oct 2018 17:11:20 GMT
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Thu, 25 Oct 2018 17:11:20 GMT
- request:
    method: get
    uri: https://api.labs.cognitive.microsoft.com/academic/v1.0/evaluate?attributes=Ti,AA.AuN,Y,D,RId,E&count=-5&expr=W%20==%20%27internet%27&model=latest&offset=0
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Ocp-Apim-Subscription-Key:
      - "<MS_TOKEN>"
  response:
    status:
      code: 400
      message: Bad Request
    headers:
      Content-Length:
      - '66'
      Content-Type:
      - application/json
      Access-Control-Allow-Origin:
      - "*"
      Request-Context:
      - appId=cid-v1:7cd06f0e-6d73-46a5-9c10-4ebe681d0156
      X-Powered-By:
      - ASP.NET
      Date:
      - Thu, 25 Oct 2018 17:29:14 GMT
    body:
      encoding: UTF-8
      string: '{"Error":{"Code":"Bad Argument","Message":"count should be >= 0"}}'
    http_version: 
  recorded_at: Thu, 25 Oct 2018 17:29:14 GMT
- request:
    method: get
    uri: https://api.labs.cognitive.microsoft.com/academic/v1.0/evaluate?attributes=Ti,AA.AuN,Y,D,RId,E&count=1&expr=W%20==%20%27internet%27&model=latest&offset=0
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Ocp-Apim-Subscription-Key:
      - NO_TOKEN
  response:
    status:
      code: 401
      message: Access Denied
    headers:
      Content-Length:
      - '198'
      Content-Type:
      - application/json
      Www-Authenticate:
      - AzureApiManagementKey realm="https://api.labs.cognitive.microsoft.com/academic/v1.0",name="Ocp-Apim-Subscription-Key",type="header"
      Date:
      - Thu, 25 Oct 2018 17:29:14 GMT
    body:
      encoding: UTF-8
      string: "\n{\"error\":{\"code\":\"Unspecified\",\"message\":\"Access denied
        due to invalid subscription key. Make sure you are subscribed to an API you
        are trying to call and provide the right key.\"}}\n                "
    http_version: 
  recorded_at: Thu, 25 Oct 2018 17:29:15 GMT
recorded_with: VCR 4.0.0
